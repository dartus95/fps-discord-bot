name: Release Badge

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'


jobs:
  release-badge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get latest release
        id: get_release
        uses: octokit/request-action@v2.x
        env:
          GITHUB_TOKEN: ${{ secrets.FPS_GITHUB_TOKEN }}
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
          mediaType: "application/vnd.github.v3+json"

      - name: Debug get_release output
        run: echo '${{ steps.get_release.outputs.data }}'

      - name: Create release badge
        run: |
          RELEASE_TAG=$(echo '${{ steps.get_release.outputs.data }}' | jq -r .tag_name)
          echo "RELEASE_TAG=${RELEASE_TAG}" > $GITHUB_ENV

      - name: Check if release badge needs update
        id: check_badge
        run: |
          if [ -f badges/release-badge.svg ]; then
            CURRENT_TAG=$(grep -oP 'release-\K[^-]+' badges/release-badge.svg)
            if [ "$CURRENT_TAG" = "${RELEASE_TAG}" ]; then
              echo "Badge is up to date."
              echo "update_needed=false" >> $GITHUB_ENV
            else
              echo "Badge needs update."
              echo "update_needed=true" >> $GITHUB_ENV
            fi
          else
            echo "Badge does not exist. Creating new badge."
            echo "update_needed=true" >> $GITHUB_ENV

      - name: Generate badge
        if: env.update_needed == 'true'
        run: |
          curl -o release-badge.svg "https://img.shields.io/badge/release-${RELEASE_TAG}-brightgreen"
          mkdir -p badges
          mv release-badge.svg badges/

      - name: Commit badge
        if: env.update_needed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.FPS_GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add badges/release-badge.svg
          git commit -m "Update release badge to ${RELEASE_TAG}"
          git push
